function simple_grid_gui()
% シンプルなグリッドサーチGUI

    % Figure作成
    fig = figure('Position', [200 200 500 450], ...
                 'Name', 'パッシブウォーカー グリッドサーチ', ...
                 'NumberTitle', 'off', ...
                 'MenuBar', 'none');
    
    % タイトル
    uicontrol('Style', 'text', ...
              'String', 'パッシブウォーカー初期条件グリッドサーチ', ...
              'Position', [10 410 480 30], ...
              'FontSize', 14, ...
              'FontWeight', 'bold');
    
    % q1設定
    uicontrol('Style', 'text', ...
              'String', 'q1（スタンス脚角度）:', ...
              'Position', [20 370 150 20], ...
              'HorizontalAlignment', 'left', ...
              'FontWeight', 'bold');
    
    uicontrol('Style', 'text', 'String', '最小値:', ...
              'Position', [30 340 60 20], 'HorizontalAlignment', 'right');
    q1_min = uicontrol('Style', 'edit', 'String', '0.15', ...
                       'Position', [100 340 80 25]);
    
    uicontrol('Style', 'text', 'String', '最大値:', ...
              'Position', [190 340 60 20], 'HorizontalAlignment', 'right');
    q1_max = uicontrol('Style', 'edit', 'String', '0.25', ...
                       'Position', [260 340 80 25]);
    
    uicontrol('Style', 'text', 'String', '刻み:', ...
              'Position', [350 340 50 20], 'HorizontalAlignment', 'right');
    q1_step = uicontrol('Style', 'edit', 'String', '0.05', ...
                        'Position', [410 340 60 25]);
    
    % u1設定
    uicontrol('Style', 'text', ...
              'String', 'u1（スタンス脚角速度）:', ...
              'Position', [20 290 150 20], ...
              'HorizontalAlignment', 'left', ...
              'FontWeight', 'bold');
    
    uicontrol('Style', 'text', 'String', '最小値:', ...
              'Position', [30 260 60 20], 'HorizontalAlignment', 'right');
    u1_min = uicontrol('Style', 'edit', 'String', '-0.25', ...
                       'Position', [100 260 80 25]);
    
    uicontrol('Style', 'text', 'String', '最大値:', ...
              'Position', [190 260 60 20], 'HorizontalAlignment', 'right');
    u1_max = uicontrol('Style', 'edit', 'String', '-0.15', ...
                       'Position', [260 260 80 25]);
    
    uicontrol('Style', 'text', 'String', '刻み:', ...
              'Position', [350 260 50 20], 'HorizontalAlignment', 'right');
    u1_step = uicontrol('Style', 'edit', 'String', '0.05', ...
                        'Position', [410 260 60 25]);
    
    % q2設定
    uicontrol('Style', 'text', ...
              'String', 'q2（スイング脚角度）:', ...
              'Position', [20 210 150 20], ...
              'HorizontalAlignment', 'left', ...
              'FontWeight', 'bold');
    
    uicontrol('Style', 'text', 'String', '最小値:', ...
              'Position', [30 180 60 20], 'HorizontalAlignment', 'right');
    q2_min = uicontrol('Style', 'edit', 'String', '0.35', ...
                       'Position', [100 180 80 25]);
    
    uicontrol('Style', 'text', 'String', '最大値:', ...
              'Position', [190 180 60 20], 'HorizontalAlignment', 'right');
    q2_max = uicontrol('Style', 'edit', 'String', '0.45', ...
                       'Position', [260 180 80 25]);
    
    uicontrol('Style', 'text', 'String', '刻み:', ...
              'Position', [350 180 50 20], 'HorizontalAlignment', 'right');
    q2_step = uicontrol('Style', 'edit', 'String', '0.05', ...
                        'Position', [410 180 60 25]);
    
    % u2設定
    uicontrol('Style', 'text', ...
              'String', 'u2（スイング脚角速度）:', ...
              'Position', [20 130 150 20], ...
              'HorizontalAlignment', 'left', ...
              'FontWeight', 'bold');
    
    uicontrol('Style', 'text', 'String', '最小値:', ...
              'Position', [30 100 60 20], 'HorizontalAlignment', 'right');
    u2_min = uicontrol('Style', 'edit', 'String', '-0.35', ...
                       'Position', [100 100 80 25]);
    
    uicontrol('Style', 'text', 'String', '最大値:', ...
              'Position', [190 100 60 20], 'HorizontalAlignment', 'right');
    u2_max = uicontrol('Style', 'edit', 'String', '-0.25', ...
                       'Position', [260 100 80 25]);
    
    uicontrol('Style', 'text', 'String', '刻み:', ...
              'Position', [350 100 50 20], 'HorizontalAlignment', 'right');
    u2_step = uicontrol('Style', 'edit', 'String', '0.05', ...
                        'Position', [410 100 60 25]);
    
    % ボタン
    uicontrol('Style', 'pushbutton', ...
              'String', '設定確認', ...
              'Position', [50 40 100 35], ...
              'FontSize', 11, ...
              'Callback', @check_settings);
    
    uicontrol('Style', 'pushbutton', ...
              'String', '🚀 解析開始', ...
              'Position', [170 40 120 35], ...
              'FontSize', 11, ...
              'FontWeight', 'bold', ...
              'BackgroundColor', [0.8 1 0.8], ...
              'Callback', @start_analysis);
    
    uicontrol('Style', 'pushbutton', ...
              'String', '閉じる', ...
              'Position', [310 40 100 35], ...
              'FontSize', 11, ...
              'Callback', @(~,~) close(fig));
    
    % コールバック関数
    function check_settings(~, ~)
        params = get_parameters();
        
        fprintf('\n=== 設定確認 ===\n');
        fprintf('q1: %.2f から %.2f まで %.3f 刻み (%d 点)\n', ...
                params.q1_min, params.q1_max, params.q1_step, length(params.q1_range));
        fprintf('u1: %.2f から %.2f まで %.3f 刻み (%d 点)\n', ...
                params.u1_min, params.u1_max, params.u1_step, length(params.u1_range));
        fprintf('q2: %.2f から %.2f まで %.3f 刻み (%d 点)\n', ...
                params.q2_min, params.q2_max, params.q2_step, length(params.q2_range));
        fprintf('u2: %.2f から %.2f まで %.3f 刻み (%d 点)\n', ...
                params.u2_min, params.u2_max, params.u2_step, length(params.u2_range));
        fprintf('総探索数: %d\n', params.total_combinations);
        
        % ワークスペースに設定を保存
        assignin('base', 'grid_params', params);
        fprintf('設定がワークスペースに保存されました（変数名: grid_params）\n');
    end
    
    function start_analysis(~, ~)
        params = get_parameters();
        
        % 確認ダイアログ
        if params.total_combinations > 500
            answer = questdlg(sprintf('探索数が %d と多いです。続行しますか？', params.total_combinations), ...
                            '確認', 'はい', 'いいえ', 'いいえ');
            if ~strcmp(answer, 'はい')
                return;
            end
        end
        
        fprintf('\n🚀 グリッドサーチを開始します...\n');
        fprintf('総探索数: %d\n', params.total_combinations);
        
        % grid_runner.m を呼び出し
        try
            grid_runner(params);
        catch ME
            fprintf('エラーが発生しました: %s\n', ME.message);
        end
    end
    
    function params = get_parameters()
        % パラメータを取得
        params.q1_min = str2double(get(q1_min, 'String'));
        params.q1_max = str2double(get(q1_max, 'String'));
        params.q1_step = str2double(get(q1_step, 'String'));
        params.u1_min = str2double(get(u1_min, 'String'));
        params.u1_max = str2double(get(u1_max, 'String'));
        params.u1_step = str2double(get(u1_step, 'String'));
        params.q2_min = str2double(get(q2_min, 'String'));
        params.q2_max = str2double(get(q2_max, 'String'));
        params.q2_step = str2double(get(q2_step, 'String'));
        params.u2_min = str2double(get(u2_min, 'String'));
        params.u2_max = str2double(get(u2_max, 'String'));
        params.u2_step = str2double(get(u2_step, 'String'));
        
        % 範囲作成
        params.q1_range = params.q1_min:params.q1_step:params.q1_max;
        if isempty(params.q1_range), params.q1_range = params.q1_min; end
        params.u1_range = params.u1_min:params.u1_step:params.u1_max;
        params.q2_range = params.q2_min:params.q2_step:params.q2_max;
        params.u2_range = params.u2_min:params.u2_step:params.u2_max;
        
        % 総組み合わせ数
        params.total_combinations = length(params.q1_range) * length(params.u1_range) * ...
                                   length(params.q2_range) * length(params.u2_range);
    end
end